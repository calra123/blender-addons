bl_info = {
    "name": "Skirt",
    "author": "Hanna Calra",
    "version": (1, 0),
    "blender": (2, 80, 0),
    "location": "View3D > Add > Mesh > New Object",
    "description": "Adds a new Skirt Mesh",
    "warning": "",
    "wiki_url": "",
    "category": "Add Mesh",
}


import bpy
from bpy.types import Operator
from bpy.props import FloatVectorProperty
from bpy_extras.object_utils import AddObjectHelper, object_data_add
from mathutils import Vector


def add_object(self, context):
    
    verts = [Vector((0.0, 1.0, -0.30911290645599365)), Vector((-0.19509032368659973, 0.9807852506637573, -0.30911290645599365)), Vector((-0.3826834559440613, 0.9238795042037964, 0.0)), Vector((-0.5555702447891235, 0.8314695954322815, 0.0)), Vector((-0.7071067690849304, 0.7071067690849304, -0.30911290645599365)), Vector((-0.8314696550369263, 0.5555701851844788, -0.30911290645599365)), Vector((-0.9238795042037964, 0.3826834261417389, 0.0)), Vector((-0.9807852506637573, 0.19509035348892212, 0.0)), Vector((-1.0, 7.549790126404332e-08, -0.30911290645599365)), Vector((-0.9807853102684021, -0.19509020447731018, -0.30911290645599365)), Vector((-0.9238795638084412, -0.38268327713012695, 0.0)), Vector((-0.8314696550369263, -0.5555701851844788, 0.0)), Vector((-0.7071067690849304, -0.7071067690849304, -0.30911290645599365)), Vector((-0.5555701851844788, -0.8314696550369263, -0.30911290645599365)), Vector((-0.38268327713012695, -0.9238796234130859, 0.0)), Vector((-0.19509008526802063, -0.9807853102684021, 0.0)), Vector((3.2584136988589307e-07, -1.0, -0.30911290645599365)), Vector((0.19509072601795197, -0.9807851910591125, 0.0)), Vector((0.3826838731765747, -0.9238793253898621, 0.0)), Vector((0.5555707216262817, -0.8314692974090576, -0.30911290645599365)), Vector((0.7071072459220886, -0.707106351852417, -0.30911290645599365)), Vector((0.8314700126647949, -0.5555696487426758, 0.0)), Vector((0.923879861831665, -0.3826826810836792, 0.0)), Vector((0.9807854294776917, -0.1950894594192505, -0.30911290645599365)), Vector((1.0, 9.655991561885457e-07, -0.30911290645599365)), Vector((0.980785071849823, 0.1950913518667221, 0.0)), Vector((0.923879086971283, 0.38268446922302246, 0.0)), Vector((0.831468939781189, 0.5555712580680847, -0.30911290645599365)), Vector((0.7071058750152588, 0.707107663154602, -0.30911290645599365)), Vector((0.5555691123008728, 0.8314703702926636, 0.0)), Vector((0.38268208503723145, 0.9238801002502441, 0.0)), Vector((0.19508881866931915, 0.9807855486869812, -0.30911290645599365)), Vector((0.0, 1.0, -0.30911290645599365)), Vector((-0.19509032368659973, 0.9807852506637573, -0.30911290645599365)), Vector((-0.3826834559440613, 0.9238795042037964, 0.0)), Vector((-0.5555702447891235, 0.8314695954322815, 0.0)), Vector((-0.7071067690849304, 0.7071067690849304, -0.30911290645599365)), Vector((-0.8314696550369263, 0.5555701851844788, -0.30911290645599365)), Vector((-0.9238795042037964, 0.3826834261417389, 0.0)), Vector((-0.9807852506637573, 0.19509035348892212, 0.0)), Vector((-1.0, 7.549790126404332e-08, -0.30911290645599365)), Vector((-0.9807853102684021, -0.19509020447731018, -0.30911290645599365)), Vector((-0.9238795638084412, -0.38268327713012695, 0.0)), Vector((-0.8314696550369263, -0.5555701851844788, 0.0)), Vector((-0.7071067690849304, -0.7071067690849304, -0.30911290645599365)), Vector((-0.5555701851844788, -0.8314696550369263, -0.30911290645599365)), Vector((-0.38268327713012695, -0.9238796234130859, 0.0)), Vector((-0.19509008526802063, -0.9807853102684021, 0.0)), Vector((3.2584136988589307e-07, -1.0, -0.30911290645599365)), Vector((0.19509072601795197, -0.9807851910591125, 0.0)), Vector((0.3826838731765747, -0.9238793253898621, 0.0)), Vector((0.5555707216262817, -0.8314692974090576, -0.30911290645599365)), Vector((0.7071072459220886, -0.707106351852417, -0.30911290645599365)), Vector((0.8314700126647949, -0.5555696487426758, 0.0)), Vector((0.923879861831665, -0.3826826810836792, 0.0)), Vector((0.9807854294776917, -0.1950894594192505, -0.30911290645599365)), Vector((1.0, 9.655991561885457e-07, -0.30911290645599365)), Vector((0.980785071849823, 0.1950913518667221, 0.0)), Vector((0.923879086971283, 0.38268446922302246, 0.0)), Vector((0.831468939781189, 0.5555712580680847, -0.30911290645599365)), Vector((0.7071058750152588, 0.707107663154602, -0.30911290645599365)), Vector((0.5555691123008728, 0.8314703702926636, 0.0)), Vector((0.38268208503723145, 0.9238801002502441, 0.0)), Vector((0.19508881866931915, 0.9807855486869812, -0.30911290645599365)), Vector((-0.036661919206380844, 0.4750666916370392, 0.8179851174354553)), Vector((-0.08953633159399033, 0.4501293897628784, 0.8869269490242004)), Vector((-0.21536502242088318, 0.42471617460250854, 0.8200265765190125)), Vector((-0.2939480245113373, 0.3744494318962097, 0.8203607797622681)), Vector((-0.3612191379070282, 0.3098219633102417, 0.8202144503593445)), Vector((-0.3816012144088745, 0.25497785210609436, 0.8869269490242004)), Vector((-0.4520193040370941, 0.14787569642066956, 0.818520188331604)), Vector((-0.4720589220523834, 0.05678039789199829, 0.8170374631881714)), Vector((-0.4739420711994171, -0.036467768251895905, 0.8152016997337341)), Vector((-0.4575963616371155, -0.12828533351421356, 0.8130836486816406)), Vector((-0.42401254177093506, -0.17563147842884064, 0.8869269490242004)), Vector((-0.3734072148799896, -0.29370537400245667, 0.8083332180976868)), Vector((-0.3087991774082184, -0.3609507381916046, 0.8058835864067078)), Vector((-0.23230859637260437, -0.41429585218429565, 0.803509533405304)), Vector((-0.17563170194625854, -0.42401233315467834, 0.8869269490242004)), Vector((-0.055781446397304535, -0.4716980457305908, 0.7993469834327698)), Vector((0.037471264600753784, -0.47354915738105774, 0.7977182269096375)), Vector((0.12929950654506683, -0.4571729302406311, 0.7964789867401123)), Vector((0.17563185095787048, -0.4240122139453888, 0.8869269490242004)), Vector((0.2947573661804199, -0.37293174862861633, 0.7953426241874695)), Vector((0.3620285093784332, -0.30830419063568115, 0.7954889535903931)), Vector((0.4154026508331299, -0.23179955780506134, 0.7961105704307556)), Vector((0.42401254177093506, -0.17563121020793915, 0.8869269490242004)), Vector((0.4728681445121765, -0.055262427777051926, 0.7986658811569214)), Vector((0.47475123405456543, 0.03798580542206764, 0.8005016446113586)), Vector((0.45012909173965454, 0.08953690528869629, 0.8869269490242004)), Vector((0.424458771944046, 0.21666191518306732, 0.8049389719963074)), Vector((0.3742160201072693, 0.2952233552932739, 0.807370126247406)), Vector((0.30960792303085327, 0.3624686896800995, 0.8098198175430298)), Vector((0.25497713685035706, 0.38160163164138794, 0.8869269490242004)), Vector((0.14768356084823608, 0.45320838689804077, 0.8144010305404663)), Vector((0.056590013206005096, 0.47321563959121704, 0.8163565397262573)), Vector((-6.65548256506554e-08, 0.4390840530395508, 0.8869269490242004)), Vector((-0.08566109091043472, 0.43064722418785095, 0.8869269490242004)), Vector((-0.16803023219108582, 0.40566080808639526, 0.8869269490242004)), Vector((-0.2439420372247696, 0.36508509516716003, 0.8869269490242004)), Vector((-0.3104792833328247, 0.31047940254211426, 0.8869269490242004)), Vector((-0.36508503556251526, 0.24394211173057556, 0.8869269490242004)), Vector((-0.4056607186794281, 0.16803030669689178, 0.8869269490242004)), Vector((-0.4306471049785614, 0.08566121011972427, 0.8869269490242004)), Vector((-0.439083993434906, 2.0164287661827984e-07, 0.8869269490242004)), Vector((-0.4306471645832062, -0.08566080778837204, 0.8869269490242004)), Vector((-0.4056607484817505, -0.16802991926670074, 0.8869269490242004)), Vector((-0.36508503556251526, -0.2439417839050293, 0.8869269490242004)), Vector((-0.3104792833328247, -0.3104790449142456, 0.8869269490242004)), Vector((-0.2439420074224472, -0.36508479714393616, 0.8869269490242004)), Vector((-0.16803014278411865, -0.4056605398654938, 0.8869269490242004)), Vector((-0.08566099405288696, -0.4306469261646271, 0.8869269490242004)), Vector((7.651689770682424e-08, -0.4390837550163269, 0.8869269490242004)), Vector((0.0856611356139183, -0.4306468665599823, 0.8869269490242004)), Vector((0.1680302768945694, -0.4056604206562042, 0.8869269490242004)), Vector((0.24394211173057556, -0.3650846481323242, 0.8869269490242004)), Vector((0.31047937273979187, -0.3104788661003113, 0.8869269490242004)), Vector((0.36508506536483765, -0.2439415156841278, 0.8869269490242004)), Vector((0.4056607484817505, -0.16802965104579926, 0.8869269490242004)), Vector((0.4306470453739166, -0.08566047996282578, 0.8869269490242004)), Vector((0.43908387422561646, 5.924720198891009e-07, 0.8869269490242004)), Vector((0.4306469261646271, 0.08566164970397949, 0.8869269490242004)), Vector((0.40566039085388184, 0.1680307686328888, 0.8869269490242004)), Vector((0.36508458852767944, 0.24394260346889496, 0.8869269490242004)), Vector((0.3104787766933441, 0.3104797899723053, 0.8869269490242004)), Vector((0.24394139647483826, 0.3650854527950287, 0.8869269490242004)), Vector((0.16802948713302612, 0.40566107630729675, 0.8869269490242004)), Vector((0.08566029369831085, 0.4306473433971405, 0.8869269490242004)), Vector((-6.829364451732545e-08, 0.4241209328174591, 0.9549933075904846)), Vector((-0.08274193108081818, 0.4159716069698334, 0.9549933075904846)), Vector((-0.16230408847332, 0.39183667302131653, 0.9549933075904846)), Vector((-0.23562896251678467, 0.3526436984539032, 0.9549933075904846)), Vector((-0.29989877343177795, 0.2998988628387451, 0.9549933075904846)), Vector((-0.3526436388492584, 0.23562905192375183, 0.9549933075904846)), Vector((-0.39183658361434937, 0.16230417788028717, 0.9549933075904846)), Vector((-0.4159714877605438, 0.08274205029010773, 0.9549933075904846)), Vector((-0.42412087321281433, 2.0521295596154232e-07, 0.9549933075904846)), Vector((-0.4159715473651886, -0.0827416405081749, 0.9549933075904846)), Vector((-0.39183661341667175, -0.16230376064777374, 0.9549933075904846)), Vector((-0.3526436388492584, -0.23562869429588318, 0.9549933075904846)), Vector((-0.29989877343177795, -0.29989850521087646, 0.9549933075904846)), Vector((-0.23562893271446228, -0.3526434004306793, 0.9549933075904846)), Vector((-0.16230399906635284, -0.39183637499809265, 0.9549933075904846)), Vector((-0.08274183422327042, -0.4159712791442871, 0.9549933075904846)), Vector((6.990245537963347e-08, -0.42412060499191284, 0.9549933075904846)), Vector((0.08274196833372116, -0.4159712493419647, 0.9549933075904846)), Vector((0.1623041182756424, -0.3918362855911255, 0.9549933075904846)), Vector((0.23562902212142944, -0.3526432514190674, 0.9549933075904846)), Vector((0.29989883303642273, -0.2998983561992645, 0.9549933075904846)), Vector((0.3526436388492584, -0.23562845587730408, 0.9549933075904846)), Vector((0.39183658361434937, -0.16230352222919464, 0.9549933075904846)), Vector((0.41597142815589905, -0.08274132758378983, 0.9549933075904846)), Vector((0.4241207242012024, 5.827234303978912e-07, 0.9549933075904846)), Vector((0.4159713089466095, 0.08274247497320175, 0.9549933075904846)), Vector((0.3918362557888031, 0.1623046100139618, 0.9549933075904846)), Vector((0.352643221616745, 0.23562951385974884, 0.9549933075904846)), Vector((0.299898236989975, 0.29989925026893616, 0.9549933075904846)), Vector((0.23562833666801453, 0.35264405608177185, 0.9549933075904846)), Vector((0.1623033732175827, 0.391836941242218, 0.9549933075904846)), Vector((0.0827411562204361, 0.4159717261791229, 0.9549933075904846)), Vector((-0.49164342880249023, 0.523948609828949, 0.3726695775985718)), Vector((-0.5843504071235657, 0.4179263114929199, 0.36931437253952026)), Vector((0.25383779406547546, -0.6722872853279114, 0.3931966722011566)), Vector((0.3800431191921234, -0.6098355650901794, 0.39750638604164124)), Vector((-0.6546010375022888, 0.29584330320358276, 0.3666403889656067)), Vector((0.49164363741874695, -0.5239481329917908, 0.4014139175415039)), Vector((-0.6996958255767822, 0.1623912900686264, 0.3647504448890686)), Vector((0.5843505263328552, -0.4179256856441498, 0.4047691524028778)), Vector((-0.7179016470909119, 0.022698625922203064, 0.36371710896492004)), Vector((0.6546011567115784, -0.29584261775016785, 0.407443106174469)), Vector((-0.708518922328949, -0.11786630749702454, 0.3635801374912262)), Vector((0.6996957659721375, -0.16239039599895477, 0.40933308005332947)), Vector((-0.6719081997871399, -0.253901869058609, 0.3643448054790497)), Vector((0.7179015278816223, -0.022697627544403076, 0.41036638617515564)), Vector((-0.6094764471054077, -0.3801800310611725, 0.36598169803619385)), Vector((0.7085186243057251, 0.11786741018295288, 0.4105033576488495)), Vector((-0.5236228704452515, -0.49184805154800415, 0.36842790246009827)), Vector((0.6719077229499817, 0.2539028525352478, 0.409738689661026)), Vector((-0.4176466166973114, -0.5846146941184998, 0.37158942222595215)), Vector((0.16223391890525818, 0.7000470757484436, 0.3945338726043701)), Vector((0.0226127952337265, 0.7182767987251282, 0.3900410830974579)), Vector((0.6094757914543152, 0.3801809847354889, 0.40810179710388184)), Vector((-0.29562050104141235, -0.6549148559570312, 0.37534478306770325)), Vector((-0.11787739396095276, 0.7089035511016846, 0.38543304800987244)), Vector((0.5236220359802246, 0.4918489158153534, 0.4056555926799774)), Vector((-0.1622338742017746, -0.700046956539154, 0.37954965233802795)), Vector((-0.25383755564689636, 0.6722875833511353, 0.38088682293891907)), Vector((0.41764572262763977, 0.5846153497695923, 0.40249404311180115)), Vector((-0.022612646222114563, -0.7182766199111938, 0.3840424120426178)), Vector((-0.3800429105758667, 0.6098359227180481, 0.37657713890075684)), Vector((0.29561951756477356, 0.6549153923988342, 0.39873868227005005)), Vector((0.1178775429725647, -0.7089033722877502, 0.38865047693252563))]

    edges = []
    faces = [[25, 57, 56, 24], [12, 44, 43, 11], [26, 58, 57, 25], [13, 45, 44, 12], [27, 59, 58, 26], [14, 46, 45, 13], [1, 33, 32, 0], [28, 60, 59, 27], [15, 47, 46, 14], [2, 34, 33, 1], [29, 61, 60, 28], [16, 48, 47, 15], [3, 35, 34, 2], [30, 62, 61, 29], [17, 49, 48, 16], [4, 36, 35, 3], [31, 63, 62, 30], [18, 50, 49, 17], [5, 37, 36, 4], [0, 32, 63, 31], [19, 51, 50, 18], [6, 38, 37, 5], [20, 52, 51, 19], [7, 39, 38, 6], [21, 53, 52, 20], [8, 40, 39, 7], [22, 54, 53, 21], [9, 41, 40, 8], [23, 55, 54, 22], [10, 42, 41, 9], [24, 56, 55, 23], [11, 43, 42, 10], [161, 70, 69, 160], [163, 84, 83, 162], [164, 71, 70, 161], [165, 85, 84, 163], [166, 72, 71, 164], [167, 86, 85, 165], [168, 73, 72, 166], [169, 87, 86, 167], [170, 74, 73, 168], [171, 88, 87, 169], [172, 75, 74, 170], [173, 89, 88, 171], [174, 76, 75, 172], [175, 90, 89, 173], [176, 77, 76, 174], [177, 91, 90, 175], [178, 78, 77, 176], [180, 65, 64, 179], [181, 92, 91, 177], [182, 79, 78, 178], [183, 66, 65, 180], [184, 93, 92, 181], [185, 80, 79, 182], [186, 67, 66, 183], [187, 94, 93, 184], [188, 81, 80, 185], [189, 68, 67, 186], [190, 95, 94, 187], [191, 82, 81, 188], [160, 69, 68, 189], [179, 64, 95, 190], [162, 83, 82, 191], [91, 92, 124, 123], [78, 79, 111, 110], [65, 66, 98, 97], [92, 93, 125, 124], [79, 80, 112, 111], [66, 67, 99, 98], [93, 94, 126, 125], [80, 81, 113, 112], [67, 68, 100, 99], [94, 95, 127, 126], [81, 82, 114, 113], [68, 69, 101, 100], [95, 64, 96, 127], [82, 83, 115, 114], [69, 70, 102, 101], [83, 84, 116, 115], [70, 71, 103, 102], [84, 85, 117, 116], [71, 72, 104, 103], [85, 86, 118, 117], [72, 73, 105, 104], [86, 87, 119, 118], [73, 74, 106, 105], [87, 88, 120, 119], [74, 75, 107, 106], [88, 89, 121, 120], [75, 76, 108, 107], [89, 90, 122, 121], [76, 77, 109, 108], [90, 91, 123, 122], [77, 78, 110, 109], [64, 65, 97, 96], [126, 127, 159, 158], [113, 114, 146, 145], [100, 101, 133, 132], [127, 96, 128, 159], [114, 115, 147, 146], [101, 102, 134, 133], [115, 116, 148, 147], [102, 103, 135, 134], [116, 117, 149, 148], [103, 104, 136, 135], [117, 118, 150, 149], [104, 105, 137, 136], [118, 119, 151, 150], [105, 106, 138, 137], [119, 120, 152, 151], [106, 107, 139, 138], [120, 121, 153, 152], [107, 108, 140, 139], [121, 122, 154, 153], [108, 109, 141, 140], [122, 123, 155, 154], [109, 110, 142, 141], [96, 97, 129, 128], [123, 124, 156, 155], [110, 111, 143, 142], [97, 98, 130, 129], [124, 125, 157, 156], [111, 112, 144, 143], [98, 99, 131, 130], [125, 126, 158, 157], [112, 113, 145, 144], [99, 100, 132, 131], [51, 162, 191, 50], [32, 179, 190, 63], [37, 160, 189, 36], [50, 191, 188, 49], [63, 190, 187, 62], [36, 189, 186, 35], [49, 188, 185, 48], [62, 187, 184, 61], [35, 186, 183, 34], [48, 185, 182, 47], [61, 184, 181, 60], [34, 183, 180, 33], [47, 182, 178, 46], [60, 181, 177, 59], [33, 180, 179, 32], [46, 178, 176, 45], [59, 177, 175, 58], [45, 176, 174, 44], [58, 175, 173, 57], [44, 174, 172, 43], [57, 173, 171, 56], [43, 172, 170, 42], [56, 171, 169, 55], [42, 170, 168, 41], [55, 169, 167, 54], [41, 168, 166, 40], [54, 167, 165, 53], [40, 166, 164, 39], [53, 165, 163, 52], [39, 164, 161, 38], [52, 163, 162, 51], [38, 161, 160, 37]]

    mesh = bpy.data.meshes.new(name="Skirt")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


class OBJECT_OT_add_object(Operator, AddObjectHelper):
    """Create a Skirt Mesh"""
    bl_idname = "mesh.add_skirt"
    bl_label = "Add Skirt Mesh"
    bl_options = {'REGISTER', 'UNDO'}



    def execute(self, context):

        add_object(self, context)

        return {'FINISHED'}


# Registration

def add_object_button(self, context):
    self.layout.operator(
        OBJECT_OT_add_object.bl_idname,
        text="Add Skirt",
        icon='PLUGIN')


# This allows you to right click on a button and link to documentation
def add_object_manual_map():
    url_manual_prefix = "https://docs.blender.org/manual/en/latest/"
    url_manual_mapping = (
        ("bpy.ops.mesh.add_object", "scene_layout/object/types.html"),
    )
    return url_manual_prefix, url_manual_mapping


def register():
    bpy.utils.register_class(OBJECT_OT_add_object)
    bpy.utils.register_manual_map(add_object_manual_map)
    bpy.types.VIEW3D_MT_mesh_add.append(add_object_button)


def unregister():
    bpy.utils.unregister_class(OBJECT_OT_add_object)
    bpy.utils.unregister_manual_map(add_object_manual_map)
    bpy.types.VIEW3D_MT_mesh_add.remove(add_object_button)


if __name__ == "__main__":
    register()
